/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript during the build
 * process (.vite/prebuild-types.mjs). DO NOT MODIFY IT BY HAND. Instead, modify the
 * source JSONSchema file, and run json-schema-to-typescript to regenerate this file.
 */

export type NodePackageSchema = NodePackage
export type Field = {
  id: string
  type: 'InputOutput' | 'Select' | 'List' | 'Radio' | 'MultiSelect'
  props?: {}
} & Field1
export type Field1 = InputOutputField | SelectField | ListField | RadioField | MultiSelectField
export type InputOutputFieldProps = (
  | {
      [k: string]: unknown
    }
  | {
      [k: string]: unknown
    }
) & {
  inputLabel?: string
  outputLabel?: string
  inputDatatype?: string
  outputDatatype?: string
  inputMulti?: boolean
}

export interface NodePackage {
  /**
   * TODO: Document the schema using the description property.
   */
  name: string
  nodes: Node[]
  /**
   * This should point to the file NodePackage.schema.json.
   */
  $schema?: string
}
export interface Node {
  id: string
  title: string
  fields: Field[]
}
export interface InputOutputField {
  type?: 'InputOutput'
  props: InputOutputFieldProps
}
export interface SelectField {
  type?: 'Select'
  props: SelectFieldProps
}
export interface SelectFieldProps {
  label?: string
  values: string[]
  default: string
}
export interface ListField {
  type?: 'List'
  props?: ListFieldProps
}
export interface ListFieldProps {
  label?: string
  placeholder?: string
}
export interface RadioField {
  type?: 'Radio'
  props: RadioFieldProps
}
export interface RadioFieldProps {
  label?: string
  valueLabelPairs: {
    [k: string]: string
  }
  defaultValue?: string
}
export interface MultiSelectField {
  type?: 'MultiSelect'
  props: MultiSelectFieldProps
}
export interface MultiSelectFieldProps {
  label?: string
  valueLabelPairs: {
    [k: string]: string
  }
  placeholder?: string
}
