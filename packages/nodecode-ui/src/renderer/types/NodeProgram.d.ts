/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript during the build
 * process (.vite/prebuild-types.mjs). DO NOT MODIFY IT BY HAND. Instead, modify the
 * source JSONSchema file, and run json-schema-to-typescript to regenerate this file.
 */

export type NodeProgramSchema = NodeProgram
/**
 * This interface was referenced by `NodeState`'s JSON-Schema definition
 * via the `patternProperty` "^Select.".
 */
export type SelectFieldState = string
/**
 * This interface was referenced by `NodeState`'s JSON-Schema definition
 * via the `patternProperty` "^List.".
 */
export type ListFieldState = string[]
/**
 * This interface was referenced by `NodeState`'s JSON-Schema definition
 * via the `patternProperty` "^Radio.".
 */
export type RadioFieldState = string
/**
 * This interface was referenced by `NodeState`'s JSON-Schema definition
 * via the `patternProperty` "^MultiSelect.".
 */
export type MultiSelectFieldState = string[]
export type FieldState =
  | InputOutputFieldState
  | SelectFieldState
  | ListFieldState
  | RadioFieldState
  | MultiSelectFieldState

export interface NodeProgram {
  nodes: {
    [k: string]: NodeInstance
  }
  connections: {
    [k: string]: Connection
  }
  /**
   * This should point to the file NodeProgram.schema.json.
   */
  $schema?: string
}
export interface NodeInstance {
  type: string
  display: {
    width: number
    x: number
    y: number
  }
  state: NodeState
}
export interface NodeState {
  [k: string]: FieldState
}
/**
 * This interface was referenced by `NodeState`'s JSON-Schema definition
 * via the `patternProperty` "^InputOutput.".
 */
export interface InputOutputFieldState {}
export interface Connection {
  source: Socket
  target: Socket
}
export interface Socket {
  nodeKey: string
  fieldKey: string
  isInput: boolean
  socketKey: string
}
