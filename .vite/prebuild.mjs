import fs from 'fs'
import { compileFromFile } from 'json-schema-to-typescript'
import TypeDoc from 'typedoc'

console.log('Converting JSON Schemas to Typescript type definitions...\n')

const comment = `
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript during the build
 * process (.vite/prebuild.mjs). DO NOT MODIFY IT BY HAND. Instead, modify the source
 * JSONSchema file, and run json-schema-to-typescript to regenerate this file.
 */
`

compileFromFile('./public/config/schemas/NodePackage.schema.json', {
  additionalProperties: false,
  style: {
    singleQuote: true,
    semi: false,
  },
  bannerComment: comment,
}).then((ts) => fs.writeFileSync('./src/renderer/types/NodePackage.d.ts', ts))

compileFromFile('./public/config/schemas/NodeProgram.schema.json', {
  additionalProperties: false,
  style: {
    singleQuote: true,
    semi: false,
  },
  bannerComment: comment,
}).then((ts) => fs.writeFileSync('./src/renderer/types/NodeProgram.d.ts', ts))




// https://typedoc.org/guides/installation/
console.log('Generating documentation from comments...')

const app = new TypeDoc.Application()

app.options.addReader(new TypeDoc.TSConfigReader())
app.bootstrap({
  // typedoc options here
  entryPoints: ['src/renderer/main.tsx'],
})

const project = app.convert()

if (!project)
  throw new Error('Could not build TypeDoc documentation')

const outputDir = 'docs'
await app.generateDocs(project, outputDir)